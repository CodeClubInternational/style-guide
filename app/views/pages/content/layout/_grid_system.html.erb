<%= section_header('How to Grid!') %>

<p>
  Our grid system uses <%= link_to 'CSS Flexbox', 'https://www.w3.org/TR/2016/CR-css-flexbox-1-20160301/' %> to control
  the layout of the different sections of content and elements your sites will be built from.
</p>

<p>
  The grid is built to contain up to 12 columns, and responds to differing viewport widths by
  adjusting the widths of columns to keep things feeling comfortable and legible.
</p>

<p>
  <%= link_to "Take a look at a demo of the grid system", page_path('example-pages', 'grid-demo'), :class => "c-button c-button--green" %>
</p>

<hr>

<%= section_header('A Basic Grid') %>

<p>
  In its purest form, a grid looks like this:
</p>

<%= render_example :only_code => true do %>
<div class="c-grid">
  <div class="c-col c-col--12">
    ...
  </div>
</div>
<% end %>

<p>
  That will create a grid <strong>row</strong> (<%= highlight_sass_example(".c-grid") %>) with one <strong>column</strong>
  (<%= highlight_sass_example(".c-col") %>), that spans all 12 columns (<%= highlight_sass_example(".c-col--12") %>)
</p>

<p>
  Other column widths are specified the same way:
</p>

<%= render_example :only_code => true do %>
<div class="c-grid">
  <% for i in 1..12 do %>
  <div class="c-col c-col--<%= i %>"> ... </div>
  <% end %>
</div>
<% end %>

<p>
  Grid columns can be combined in any combination to create your layouts, just remember that <strong>a column
  will always appear on the same row as the previous column if there is space for it to fit</strong>.
</p>

<p>
  If you find that you need to start a new row, then close your current <%= highlight_sass_example(".c-grid")%>
  and open a new one.
</p>

<hr>


<%= section_header('Grid Column Alignment') %>

<p>
  Groups of columns can be aligned vertically or horizontally. Examples of the options available can be found on
  <%= link_to 'the grid demo page', page_path('example-pages', 'grid-demo') %> - view the page source for the HTML
  you'll need to achieve these results.
</p>
